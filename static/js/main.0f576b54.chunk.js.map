{"version":3,"sources":["components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","class","onClick","togmode","role","for","Textform","useState","text","setText","classname","heading","name","value","onChange","event","console","log","target","rows","columns","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","App","setmode","body","style","backgroundColor","about","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"4LAGe,SAASA,EAAOC,GAC3B,OACJ,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACE,sBAAKD,UAAU,kBAAf,UACE,oBAAGA,UAAU,eAAeE,KAAK,IAAjC,UAAsCH,EAAMI,MAA5C,OACA,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,oBAAIL,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,sBAmBJ,sBAAKI,MAAK,sCAA+C,UAAdP,EAAME,KAAgB,OAAO,SAAxE,UACJ,uBAAOD,UAAU,mBAAmBI,KAAK,WAAWG,QAASR,EAAMS,QAASC,KAAK,SAASJ,GAAG,2BAC7F,uBAAOL,UAAU,mBAAmBU,IAAI,yBAAxC,kC,MCjCa,SAASC,EAASZ,GAC/B,IA4BA,EAAwBa,mBAAS,kBAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAGA,OACE,qCACE,8BACE,sBAAKd,UAAU,kBAAf,UACE,sBAAKe,UAAU,2BAAf,UACE,sBAAKf,UAAU,WAAf,UACG,IACD,6BAAKD,EAAMiB,aAGb,0BACEC,KAAK,OACLZ,GAAG,SACHa,MAAOL,EACPM,SA/BW,SAACC,GACtBC,QAAQC,IAAI,aACZR,EAAQM,EAAMG,OAAOL,QA8BXM,KAAK,KACLC,QAAQ,SACRnB,MAAM,yBAIV,sBAAKN,UAAU,eAAf,UACE,wBAAQA,UAAU,2BAA2BO,QArDjC,WACpBc,QAAQC,IAAI,qBAAuBT,GACnC,IAAIa,EAAUb,EAAKc,cACnBb,EAAQY,IAkDA,kCAGA,wBAAQ1B,UAAU,2BAA2BO,QAnDjC,WACpB,IAAImB,EAAUb,EAAKe,cACnBd,EAAQY,IAiDA,kCAGA,wBAAQ1B,UAAU,2BAA2BO,QAlDnC,WAClB,IAAImB,EAAUb,EAAKe,cAAgBf,EAAKc,cACxCb,EAAQY,IAgDA,yCAGA,wBAAQ1B,UAAU,2BAA2BO,QA5CzC,WAEZO,EADc,KA2CN,mBAGA,wBAAQd,UAAU,wDAAwDO,QA3CvE,WACX,IAAIM,EAAOgB,SAASC,eAAe,UACnCjB,EAAKkB,SACLC,UAAUC,UAAUC,UAAUrB,EAAKK,QAwC3B,+BAMN,sBAAKZ,MAAM,uBAAX,UACE,mDACA,8BACGO,EAAKsB,MAAM,KAAKC,OADnB,cACsCvB,EAAKuB,OAD3C,iBAGA,yCACA,4BAAIvB,EAAKuB,OAAO,EAAGvB,EAAK,qCChCjBwB,MAxCf,WACE,MAAwBzB,mBAAS,SAAjC,mBAAOX,EAAP,KAAaqC,EAAb,KAQM9B,EAAU,WACD,UAATP,GACFqC,EAAQ,QACRT,SAASU,KAAKC,MAAMC,gBAAkB,UACtCZ,SAAS1B,MAAQ,wBAEjBmC,EAAQ,SACRT,SAASU,KAAKC,MAAMC,gBAAkB,QACtCZ,SAAS1B,MAAQ,yBAGrB,OAAQ,qCAcS,cAACL,EAAD,CAAQK,MAAM,YAAaF,KAAMA,EAAMO,QAASA,IAAW,cAACG,EAAD,CAAUK,QAAQ,kBAAiB0B,MAAM,UAAUzC,KAAMA,EAAMO,QAASA,QC9BvImC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzB,SAASC,eAAe,SAM1Ba,K","file":"static/js/main.0f576b54.chunk.js","sourcesContent":["import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n<nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title} </a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* removing about for git hub  because router doesnt work on git hub */}\r\n        {/* <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n        </li> */}\r\n          {/* <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            contact us \r\n          </a>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li><a className=\"dropdown-item\" href=\"/\">email</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">phone/telephone </a></li>\r\n            <li><hr className=\"dropdown-divider\" /></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">address</a></li>\r\n          </ul>\r\n        </li> */}\r\n\r\n      </ul>\r\n      <div class={`form-check form-switch text-${props.mode=== 'light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.togmode} role=\"switch\" id=\"flexSwitchCheckChecked\" />\r\n  <label className=\"form-check-label\" for=\"flexSwitchCheckChecked\">dark mode</label>\r\n</div>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Textform(props) {\r\n  const handleUPClick = () => {\r\n    console.log(\"upper case clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  };\r\n  const handleLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n  };\r\n  const concatlowup = () => {\r\n    let newText = text.toLowerCase() + text.toUpperCase();\r\n    setText(newText);\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    console.log(\"on change\");\r\n    setText(event.target.value);\r\n  };\r\n  const clear = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n  };\r\n  const copy = () => {\r\n    let text = document.getElementById(\"mytext\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"enter the text\");\r\n  //   setText(\"hello world\");\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"container my-3 \">\r\n          <div classname=\"mb-3 justify-content-100\">\r\n            <div className=\"headings\">\r\n              {\" \"}\r\n              <h1>{props.heading}</h1>\r\n            </div>\r\n\r\n            <textarea\r\n              name=\"text\"\r\n              id=\"mytext\"\r\n              value={text}\r\n              onChange={handleOnChange}\r\n              rows=\"10\"\r\n              columns=\"300000\"\r\n              class=\"form-control w-75\"\r\n            ></textarea>\r\n\r\n          </div>\r\n          <div className=\"buttons mx-3\">\r\n            <button className=\"btn btn-danger mx-1 my-2\" onClick={handleUPClick}>\r\n              convert to uppercase\r\n            </button>\r\n            <button className=\"btn btn-danger mx-1 my-2\" onClick={handleLoClick}>\r\n              convert to lowercase\r\n            </button>\r\n            <button className=\"btn btn-danger mx-1 my-2\" onClick={concatlowup}>\r\n              concate lower and uppercase\r\n            </button>\r\n            <button className=\"btn btn-danger mx-2 my-2\" onClick={clear}>\r\n              clear\r\n            </button>\r\n            <button className=\"btn btn-warning d-flex align-button-right mx-3 my-5  \" onClick={copy}>\r\n              copy text\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"summary d-flex-rows \">\r\n        <h2>YOUR TEXT SUMMARY</h2>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} characters\r\n        </p>\r\n        <h2>preview</h2>\r\n        <p>{text.length>0 ?text:\"enter text to preview here\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n  ","import Navbar from \"../src/components/Navbar\";\nimport React, { useState } from \"react\";\n\nimport \"./App.css\";\n// import About from \"./components/About\";\nimport Textform from \"./components/Textform\";\n// import Alert from './components/Alert';\n// import { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  // const [alert, setalert] = useState();\n  // const showalert =(message,type)=>{\n  //   setalert({\n  //     msg:message,\n  //     type : type\n  //   })\n  // }\n  const togmode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#876161\";\n      document.title = \"textutils-dark mode\";\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.title = \"textutils-light mode\";\n    }\n  };\n  return (<>\n    {/* <Router>\n      \n      {/* <Alert ></Alert> */}\n      \n        {/* <Switch>\n          <Route path=\"/about\">\n           \n          </Route>\n          <Route path=\"/\">\n           \n          \n          </Route>\n        </Switch>\n      </Router> */}<Navbar title=\"Textconvo\"  mode={mode} togmode={togmode} /><Textform heading=\"ENTER YOUR TEXT\"about=\" about \" mode={mode} togmode={togmode}/>\n       {/* <About /> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}